@model MvcMovieProject.MovieViewModels.Models.MovieGenreViewModel
<link href="~/css/StyleSheet.css" rel="stylesheet" />
<script src="~/lib/jquery/dist/jquery.js"></script>
<script type="text/javascript" src="~/js/MovieIndex.js"></script>
@{
    ViewData["Title"] = "Movies";
}

<h2>Movies</h2>


<p>
    <a asp-action="Create">Add New Movie</a>
</p>

<form asp-controller="Movies" asp-action="Index" method="get">
    <p>
        <select asp-for="movieGenre" asp-items="Model.genres">
            <option value="">All</option>
        </select>
        Title: <input type="text" name="movieSearch" value="@ViewData["MovieFilter"]" />
        Actor: <input type="text" name="actorSearch" value="@ViewData["ActorFilter"]" />
        <input type="submit" value="Search" class="btn btn-default" /> |
        <a asp-action="Index" value="">Back to Full List</a>
    </p>
</form>
<table class="table" id="movieTable">
    <thead>
        <tr>
            <th>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["TitleSortParm"]" asp-route-actorFilter="@ViewData["ActorFilter"]" asp-route-movieFilter="@ViewData["MovieFilter"]">@Html.DisplayNameFor(model => model.movies[0].Title)</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["DateSortParm"]" asp-route-actorFilter="@ViewData["ActorFilter"]" asp-route-movieFilter="@ViewData["MovieFilter"]">@Html.DisplayNameFor(model => model.movies[0].ReleaseDate)</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["GenreSortParm"]" asp-route-actorFilter="@ViewData["ActorFilter"]" asp-route-movieFilter="@ViewData["MovieFilter"]">@Html.DisplayNameFor(model => model.movies[0].Genre)</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["PriceSortParm"]" asp-route-actorFilter="@ViewData["ActorFilter"]" asp-route-movieFilter="@ViewData["MovieFilter"]">@Html.DisplayNameFor(model => model.movies[0].Price)</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["RatingSortParm"]" asp-route-actorFilter="@ViewData["ActorFilter"]" asp-route-movieFilter="@ViewData["MovieFilter"]">@Html.DisplayNameFor(model => model.movies[0].Rating)</a>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>


        @foreach (var item in Model.PageList)
        {
            string selectedRow = "";
            if (item.ID == (int?)ViewData["MovieID"])
            {
                selectedRow = "success";


            }
            <tr class="@selectedRow clickable-row" onclick="location.href='@Url.Action("Index", "Movies", new {id = @item.ID })'">
                <td>
                    <a asp-action="Details" asp-route-id="@item.ID">
                        <img src="@item.Image" alt="@item.Title" height="200" width="150" />
                    </a>
                </td>
                <td>
                    <a asp-action="Details" asp-route-id="@item.ID">
                        @Html.DisplayFor(modelItem => item.Title)
                    </a>
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ReleaseDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Genre)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Price)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Rating)
                </td>
                <td>
                    <a asp-action="Index" asp-route-id="@item.ID" asp-route-sortOrder="@ViewData["CurrentSort"]" 
                       asp-route-actorSearch="@ViewData["ActorFilter"]" asp-route-movieSearch="@ViewData["MovieFilter"]" 
                       asp-route-page="@ViewData["CurrentPage"]">Select</a> |
                    <a asp-action="Edit" asp-route-id="@item.ID">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.ID">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.ID">Delete</a>
                </td>
            </tr>
            }
</tbody>
</table>

@if (Model.MovieIndexData.Actors != null)
{
    var id = (from i in Model.MovieIndexData.Movies
              where Model.MovieIndexData.ID == i.ID
              select i).FirstOrDefault();
    <h3>Cast of @id.Title</h3>
    <table class="table">
        <tr>
            <th>Actor</th>
            <th>Character</th>
        </tr>

        @foreach (var item in Model.MovieIndexData.Actors)
        {
            <tr>
                <td>
                    <a asp-controller="Actors" asp-action="Details" asp-route-id="@item.ActorID">@item.Name</a>
                </td>
                @foreach (var role in Model.MovieIndexData.MovieRoles)
                {
                    if (role.ActorID == item.ActorID)
                    {
                        <td>@role.Character </td>

                    }

                }

            </tr>
        }

    </table>
    ViewData["MovieID"] = null;

}

@{
    var prevDisabled = !Model.PageList.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.PageList.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-page="@(Model.PageList.PageIndex - 1)"
   asp-route-actorFilter="@ViewData["ActorFilter"]"
   asp-route-movieFilter="@ViewData["MovieFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-page="@(Model.PageList.PageIndex + 1)"
   asp-route-actorFilter="@ViewData["ActorFilter"]"
   asp-route-movieFilter="@ViewData["MovieFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>